<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.ts.ssm.controller" />
    <mvc:annotation-driven/>
    <!-- 自动扫描该包，使用SpringMVC认为包下用了@Controller注解的类是控制器,避免扫描@Service导致事务不能使用 -->
    <!--<context:component-scan base-package = "com.ts.ssm">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>-->

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id = "mappingJacksonHttpMessageConverter"
          class = "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name = "supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 以下代码注掉因为版本原因
     配置ViewResolver。
       可以用多个ViewResolver。
       使用order属性排序。
      InternalResourceViewResolver放在最后。
      /user/{userid}.json    用于返回一个描述User的JSON
     /user/{userid}        用于返回一个展示User的JSP页面
     /user/{userid}.xml     用于返回一个展示User的XML文件
      -->
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <!--<bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" />	&lt;!&ndash; JSON转换器 &ndash;&gt;
            </list>
        </property>
    </bean>-->
    <!-- 协商多种视图解析器 -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="defaultViews">
            <list>
                <!-- JSON View -->
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
                </bean>
            </list>
        </property>
    </bean>


    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/page/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>

    <!-- 静态资源处理， css， js， imgs -->
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/"/>
    <!-- 两个标准配置 -->
    <!-- 将springmvc不能处理的请求交给tomcat -->
    <mvc:default-servlet-handler/>
    <!-- 能支持springmvc更高级的一些功能 ，JSR303校验，快捷的ajax-->
    <!--<mvc:annotation-driven/>-->

    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器
    参数 -->
    <!--https://my.oschina.net/watsonos/blog/833056?utm_medium=referral-->
    <!-- 默认的注解映射的支持  比如支持@RestController -->
   <!-- <mvc:annotation-driven/>-->

</beans>